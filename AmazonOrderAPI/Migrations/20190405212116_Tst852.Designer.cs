// <auto-generated />
using System;
using AmazonOrderAPI.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AmazonOrderAPI.Migrations
{
    [DbContext(typeof(OrderContext))]
    [Migration("20190405212116_Tst852")]
    partial class Tst852
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AmazonOrderAPI.DataContext.Entities.AmazonMWSConfig", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessKey");

                    b.Property<string>("AppName");

                    b.Property<string>("ClientId");

                    b.Property<string>("Country");

                    b.Property<string>("CountryCode");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CurrencyCode");

                    b.Property<string>("MWSAuthToken");

                    b.Property<string>("MarketplaceId");

                    b.Property<string>("SecretKey");

                    b.Property<string>("SellerId");

                    b.Property<string>("ServiceURL");

                    b.HasKey("Id");

                    b.ToTable("AmazonMWSConfig");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<string>("AddressLine3");

                    b.Property<string>("AddressType");

                    b.Property<string>("City");

                    b.Property<string>("CountryCode");

                    b.Property<string>("County");

                    b.Property<string>("District");

                    b.Property<string>("Municipality");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("PostalCode");

                    b.Property<string>("StateOrRegion");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.BuyerCustomizedInfoDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CustomizedURL");

                    b.HasKey("Id");

                    b.ToTable("BuyerCustomizedInfoDetail");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.BuyerTaxInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyLegalName");

                    b.Property<string>("TaxingRegion");

                    b.HasKey("Id");

                    b.ToTable("BuyerTaxInfo");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.InvoiceData", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BuyerSelectedInvoiceCategory");

                    b.Property<string>("InvoiceInformation");

                    b.Property<string>("InvoiceRequirement");

                    b.Property<string>("InvoiceTitle");

                    b.HasKey("Id");

                    b.ToTable("InvoiceData");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.Money", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amount");

                    b.Property<string>("CurrencyCode");

                    b.HasKey("Id");

                    b.ToTable("Money");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AmazonOrderId");

                    b.Property<string>("BuyerCounty");

                    b.Property<string>("BuyerEmail");

                    b.Property<string>("BuyerName");

                    b.Property<long?>("BuyerTaxInfoId");

                    b.Property<string>("CbaDisplayableShippingLabel");

                    b.Property<DateTime>("EarliestDeliveryDate");

                    b.Property<DateTime>("EarliestShipDate");

                    b.Property<string>("EasyShipShipmentStatus");

                    b.Property<string>("FulfillmentChannel");

                    b.Property<bool>("IsBusinessOrder");

                    b.Property<bool>("IsEstimatedShipDateSet");

                    b.Property<bool>("IsPremiumOrder");

                    b.Property<bool>("IsPrime");

                    b.Property<bool>("IsReplacementOrder");

                    b.Property<DateTime>("LastUpdateDate");

                    b.Property<DateTime>("LatestDeliveryDate");

                    b.Property<DateTime>("LatestShipDate");

                    b.Property<int?>("ListOrderItemStatusId");

                    b.Property<string>("MarketplaceId");

                    b.Property<decimal>("NumberOfItemsShipped");

                    b.Property<decimal>("NumberOfItemsUnshipped");

                    b.Property<string>("OrderChannel");

                    b.Property<string>("OrderStatus");

                    b.Property<long?>("OrderTotalId");

                    b.Property<string>("OrderType");

                    b.Property<string>("PaymentMethod");

                    b.Property<DateTime>("PromiseResponseDueDate");

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<string>("PurchaseOrderNumber");

                    b.Property<string>("ReplacedOrderId");

                    b.Property<string>("SalesChannel");

                    b.Property<string>("SellerOrderId");

                    b.Property<string>("ShipServiceLevel");

                    b.Property<string>("ShipmentServiceLevelCategory");

                    b.Property<bool>("ShippedByAmazonTFM");

                    b.Property<long?>("ShippingAddressId");

                    b.Property<int?>("ShippingAddressStatusId");

                    b.Property<string>("TFMShipmentStatus");

                    b.HasKey("Id");

                    b.HasIndex("BuyerTaxInfoId");

                    b.HasIndex("OrderTotalId");

                    b.HasIndex("ShippingAddressId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ASIN");

                    b.Property<long?>("BuyerCustomizedInfoId");

                    b.Property<long?>("CODFeeDiscountId");

                    b.Property<long?>("CODFeeId");

                    b.Property<string>("ConditionId");

                    b.Property<string>("ConditionNote");

                    b.Property<string>("ConditionSubtypeId");

                    b.Property<string>("GiftMessageText");

                    b.Property<string>("GiftWrapLevel");

                    b.Property<long?>("GiftWrapPriceId");

                    b.Property<long?>("GiftWrapTaxId");

                    b.Property<long?>("InvoiceDataId");

                    b.Property<bool>("IsGift");

                    b.Property<bool>("IsTransparency");

                    b.Property<long?>("ItemPriceId");

                    b.Property<long?>("ItemTaxId");

                    b.Property<long>("OrderId");

                    b.Property<string>("OrderItemId");

                    b.Property<long?>("PointsGrantedId");

                    b.Property<string>("PriceDesignation");

                    b.Property<long?>("ProductInfoId");

                    b.Property<long?>("PromotionDiscountId");

                    b.Property<long?>("PromotionDiscountTaxId");

                    b.Property<decimal>("QuantityOrdered");

                    b.Property<decimal>("QuantityShipped");

                    b.Property<string>("ScheduledDeliveryEndDate");

                    b.Property<string>("ScheduledDeliveryStartDate");

                    b.Property<string>("SellerSKU");

                    b.Property<bool>("SerialNumberRequired");

                    b.Property<long?>("ShippingDiscountId");

                    b.Property<long?>("ShippingDiscountTaxId");

                    b.Property<long?>("ShippingPriceId");

                    b.Property<long?>("ShippingTaxId");

                    b.Property<long?>("TaxCollectionId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("BuyerCustomizedInfoId");

                    b.HasIndex("CODFeeDiscountId");

                    b.HasIndex("CODFeeId");

                    b.HasIndex("GiftWrapPriceId");

                    b.HasIndex("GiftWrapTaxId");

                    b.HasIndex("InvoiceDataId");

                    b.HasIndex("ItemPriceId");

                    b.HasIndex("ItemTaxId");

                    b.HasIndex("OrderId");

                    b.HasIndex("PointsGrantedId");

                    b.HasIndex("ProductInfoId");

                    b.HasIndex("PromotionDiscountId");

                    b.HasIndex("PromotionDiscountTaxId");

                    b.HasIndex("ShippingDiscountId");

                    b.HasIndex("ShippingDiscountTaxId");

                    b.HasIndex("ShippingPriceId");

                    b.HasIndex("ShippingTaxId");

                    b.HasIndex("TaxCollectionId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.PaymentExecutionDetailItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("OrderId");

                    b.Property<long?>("PaymentId");

                    b.Property<string>("PaymentMethod");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentId");

                    b.ToTable("PaymentExecutionDetailItem");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.PointsGrantedDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("PointsMonetaryValueId");

                    b.Property<decimal>("PointsNumber");

                    b.HasKey("Id");

                    b.HasIndex("PointsMonetaryValueId");

                    b.ToTable("PointsGrantedDetail");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.ProductInfoDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("NumberOfItems");

                    b.HasKey("Id");

                    b.ToTable("ProductInfoDetail");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.TaxClassification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BuyerTaxInfoId");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("BuyerTaxInfoId");

                    b.ToTable("TaxClassification");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.TaxCollection", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Model");

                    b.Property<string>("ResponsibleParty");

                    b.HasKey("Id");

                    b.ToTable("TaxCollection");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.Order", b =>
                {
                    b.HasOne("MarketplaceWebServiceOrders.Model.BuyerTaxInfo", "BuyerTaxInfo")
                        .WithMany()
                        .HasForeignKey("BuyerTaxInfoId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "OrderTotal")
                        .WithMany()
                        .HasForeignKey("OrderTotalId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Address", "ShippingAddress")
                        .WithMany()
                        .HasForeignKey("ShippingAddressId");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.OrderItem", b =>
                {
                    b.HasOne("MarketplaceWebServiceOrders.Model.BuyerCustomizedInfoDetail", "BuyerCustomizedInfo")
                        .WithMany()
                        .HasForeignKey("BuyerCustomizedInfoId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "CODFeeDiscount")
                        .WithMany()
                        .HasForeignKey("CODFeeDiscountId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "CODFee")
                        .WithMany()
                        .HasForeignKey("CODFeeId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "GiftWrapPrice")
                        .WithMany()
                        .HasForeignKey("GiftWrapPriceId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "GiftWrapTax")
                        .WithMany()
                        .HasForeignKey("GiftWrapTaxId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.InvoiceData", "InvoiceData")
                        .WithMany()
                        .HasForeignKey("InvoiceDataId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "ItemPrice")
                        .WithMany()
                        .HasForeignKey("ItemPriceId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "ItemTax")
                        .WithMany()
                        .HasForeignKey("ItemTaxId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Order", "Orders")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MarketplaceWebServiceOrders.Model.PointsGrantedDetail", "PointsGranted")
                        .WithMany()
                        .HasForeignKey("PointsGrantedId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.ProductInfoDetail", "ProductInfo")
                        .WithMany()
                        .HasForeignKey("ProductInfoId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "PromotionDiscount")
                        .WithMany()
                        .HasForeignKey("PromotionDiscountId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "PromotionDiscountTax")
                        .WithMany()
                        .HasForeignKey("PromotionDiscountTaxId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "ShippingDiscount")
                        .WithMany()
                        .HasForeignKey("ShippingDiscountId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "ShippingDiscountTax")
                        .WithMany()
                        .HasForeignKey("ShippingDiscountTaxId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "ShippingPrice")
                        .WithMany()
                        .HasForeignKey("ShippingPriceId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "ShippingTax")
                        .WithMany()
                        .HasForeignKey("ShippingTaxId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.TaxCollection", "TaxCollection")
                        .WithMany()
                        .HasForeignKey("TaxCollectionId");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.PaymentExecutionDetailItem", b =>
                {
                    b.HasOne("MarketplaceWebServiceOrders.Model.Order")
                        .WithMany("PaymentExecutionDetail")
                        .HasForeignKey("OrderId");

                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "Payment")
                        .WithMany()
                        .HasForeignKey("PaymentId");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.PointsGrantedDetail", b =>
                {
                    b.HasOne("MarketplaceWebServiceOrders.Model.Money", "PointsMonetaryValue")
                        .WithMany()
                        .HasForeignKey("PointsMonetaryValueId");
                });

            modelBuilder.Entity("MarketplaceWebServiceOrders.Model.TaxClassification", b =>
                {
                    b.HasOne("MarketplaceWebServiceOrders.Model.BuyerTaxInfo")
                        .WithMany("TaxClassifications")
                        .HasForeignKey("BuyerTaxInfoId");
                });
#pragma warning restore 612, 618
        }
    }
}
